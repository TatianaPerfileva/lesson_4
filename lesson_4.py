print('Zadacha_1')
# Даны два неупорядоченных набора целых чисел (может быть,
# с повторениями). Выдать без повторений в порядке возрастания все те
# числа, которые встречаются в обоих наборах.
# Пользователь вводит 2 числа. n - кол-во элементов первого множества.
# m - кол-во элементов второго множества. Затем пользователь вводит 
# сами элементы множеств.
n = int(input('Введите количество элементов первого множества: '))
m = int(input('Введите количество элементов второго множества: '))
lst_1 = []
for i in range(n):
    lst_1.append(int(input('Введите элементы 1-ого множества: ')))
print(*lst_1)
lst_2 = []
for i in range(m):
    lst_2.append(int(input('Введите элементы 2-ого множества: ')))
print(*lst_2)
print(sorted(frozenset(set(lst_1).intersection(set(lst_2)))))

print('Zadacha_2')
# В фермерском хозяйстве в Карелии выращивают чернику. Она растет на
# круглой грядке, причем кусты высажены только по окружности. 
# Таким образом, у каждого куста есть ровно два соседних. 
# Всего на грядке растет N кустов.
# Эти кусты обладают разной урожайностью, поэтому ко времени сбора 
# на них выросло различное число ягод – на i-ом кусте выросло ai ягод.
# В этом фермерском хозяйстве внедрена система автоматического сбора
# черники. Эта система состоит из управляющего модуля и нескольких 
# собирающих модулей. Собирающий модуль за один заход, находясь 
# непосредственно перед некоторым кустом, собирает ягоды с этого куста 
# и с двух соседних с ним.
# Напишите программу для нахождения максимального числа ягод, которое
# может собрать за один заход собирающий модуль, находясь перед
# некоторым кустом заданной во входном файле грядки.

N = int(input('Введите количество кустов на грядке: '))
lst_1 = []
for i in range(N):
    lst_1.append(int(input('введите количество ягод с куста: ')))
lst_1 = lst_1 + lst_1[:2]
max_lst_1 = 0
for i in range(N):
    max_lst_1 = max(max_lst_1, lst_1[i] + lst_1[i+1] + lst_1[i+2])
print(f'Максимальное количество ягод с 3-х кустов: {max_lst_1}')
